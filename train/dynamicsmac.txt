#!/bin/bash
#SBATCH -p cpu_ivy
#SBATCH --mem 32000
#SBATCH -t 7-00:00
#SBATCH -c 2
#SBATCH -a 1-8 # array size
#SBATCH -D /home/bozkurth/git/thesis/SMAC3/train
#SBATCH -o log/%x.%N.%A.%a.out # STDOUT  (the folder log has to exist) %A will be replaced by the SLURM_ARRAY_JOB_ID value, whilst %a will be replaced by the SLURM_ARRAY_TASK_ID
#SBATCH -e log/%x.%N.%A.%a.err # STDERR  (the folder log has to exist) %A will be replaced by the SLURM_ARRAY_JOB_ID value, whilst %a will be replaced by the SLURM_ARRAY_TASK_ID
#SBATCH --mail-type=END,FAIL

# Activate virtual env so that run_experiment can load the correct packages
source activate the

if [ 1 -eq $SLURM_ARRAY_TASK_ID ]; then
    python ~/git/thesis/SMAC3/train/tabular_q.py \
        --num_episodes 1000 \
        --obs_space budget \
        --act_space exploration_weight \
        --reward_fun dense_inc_perf_improvement \
        --benchmark branin \
        --horizon 15 \
        --action_repeat 3 \
        --acquisition_function AdaptiveLCB \
        -l 1.0 \
        --num_checkpoints 10 \
        --learning_starts 100
    exit $?
fi


if [ 2 -eq $SLURM_ARRAY_TASK_ID ]; then
    python ~/git/thesis/SMAC3/train/tabular_q.py \
        --num_episodes 1000 \
        --obs_space budget \
        --act_space exploration_weight \
        --reward_fun dense_inc_perf_improvement \
        --benchmark branin \
        --horizon 30 \
        --action_repeat 3 \
        --acquisition_function AdaptiveLCB \
        -l 1.0 \
        --num_checkpoints 10 \
        --learning_starts 100
    exit $?
fi


if [ 3 -eq $SLURM_ARRAY_TASK_ID ]; then
    python ~/git/thesis/SMAC3/train/tabular_q.py \
        --num_episodes 1000 \
        --obs_space budget \
        --act_space exploration_weight \
        --reward_fun dense_inc_perf_improvement \
        --benchmark branin \
        --horizon 45 \
        --action_repeat 3 \
        --acquisition_function AdaptiveLCB \
        -l 1.0 \
        --num_checkpoints 10 \
        --learning_starts 100
    exit $?
fi

if [ 4 -eq $SLURM_ARRAY_TASK_ID ]; then
    python ~/git/thesis/SMAC3/train/tabular_q.py \
        --num_episodes 1000 \
        --obs_space budget \
        --act_space exploration_weight \
        --reward_fun dense_inc_perf_improvement \
        --benchmark branin \
        --horizon 60 \
        --action_repeat 3 \
        --acquisition_function AdaptiveLCB \
        -l 1.0 \
        --num_checkpoints 10 \
        --learning_starts 100
    exit $?
fi

if [ 5 -eq $SLURM_ARRAY_TASK_ID ]; then
    python ~/git/thesis/SMAC3/train/tabular_q.py \
        --num_episodes 1000 \
        --obs_space budget \
        --act_space exploration_weight \
        --reward_fun dense_inc_perf_improvement \
        --benchmark camelback \
        --horizon 15 \
        --action_repeat 3 \
        --acquisition_function AdaptiveLCB \
        -l 1.0 \
        --num_checkpoints 10 \
        --learning_starts 100
    exit $?
fi


if [ 6 -eq $SLURM_ARRAY_TASK_ID ]; then
    python ~/git/thesis/SMAC3/train/tabular_q.py \
        --num_episodes 1000 \
        --obs_space budget \
        --act_space exploration_weight \
        --reward_fun dense_inc_perf_improvement \
        --benchmark camelback \
        --horizon 30 \
        --action_repeat 3 \
        --acquisition_function AdaptiveLCB \
        -l 1.0 \
        --num_checkpoints 10 \
        --learning_starts 100
    exit $?
fi


if [ 7 -eq $SLURM_ARRAY_TASK_ID ]; then
    python ~/git/thesis/SMAC3/train/tabular_q.py \
        --num_episodes 1000 \
        --obs_space budget \
        --act_space exploration_weight \
        --reward_fun dense_inc_perf_improvement \
        --benchmark camelback \
        --horizon 45 \
        --action_repeat 3 \
        --acquisition_function AdaptiveLCB \
        -l 1.0 \
        --num_checkpoints 10 \
        --learning_starts 100
    exit $?
fi

if [ 8 -eq $SLURM_ARRAY_TASK_ID ]; then
    python ~/git/thesis/SMAC3/train/tabular_q.py \
        --num_episodes 1000 \
        --obs_space budget \
        --act_space exploration_weight \
        --reward_fun dense_inc_perf_improvement \
        --benchmark camelback \
        --horizon 60 \
        --action_repeat 3 \
        --acquisition_function AdaptiveLCB \
        -l 1.0 \
        --num_checkpoints 10 \
        --learning_starts 100
    exit $?
fi
